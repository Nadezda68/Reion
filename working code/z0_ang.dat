'''

    dz = np.zeros_like(redshifts)
    D_phys = 0.2  # [Mpc]
    z_sample = np.linspace(0,0.02,5000)
    for i in range(np.shape(redshifts)[0]):
        print(i)
        for j in range(np.shape(redshifts)[1]):
            for k in range(len(z_sample)):
                D_comoving = D_phys*(1+redshifts[i,j])
                dist = d.comoving_distance(redshifts[i,j]+z_sample[k],redshifts[i,j], **cosmo)
                if dist>=D_comoving:
                    dz[i,j] = z_sample[k]
                    break

    dz_0 = np.vstack((dz[0,:],
                     dz[0,:],
                     dz[0,:],
                     dz[1,:],
                     dz[1,:],
                     dz[1,:],
                     dz[2,:],
                     dz[2,:],
                     dz[2,:],
                     dz[3,:],
                     dz[3,:],
                     dz[3,:],
                     dz[4,:],
                     dz[4,:],
                     dz[4,:],
                     dz[5,:],
                     dz[5,:],
                     dz[5,:]))

    np.savetxt('dz.dat', dz_0, fmt='%1.3e')


    S_ang_s1 = np.pi*np.power(32.3735689973/2,2) * np.ones(np.shape(redshifts)[1])
    S_ang_s2 = np.pi*np.power(32.4246750341/2,2) * np.ones(np.shape(redshifts)[1])
    S_ang_s3 = np.pi*np.power(33.9930433782/2,2) * np.ones(np.shape(redshifts)[1])
    S_ang_s4 = np.pi*np.power(32.4306058448/2,2) * np.ones(np.shape(redshifts)[1])
    S_ang_s6 = np.pi*np.power(33.213491504/2,2)  * np.ones(np.shape(redshifts)[1])
    S_ang_s9 = np.pi*np.power(32.4911839894/2,2) * np.ones(np.shape(redshifts)[1])

    S_ang = np.vstack((S_ang_s1,
                       S_ang_s1,
                       S_ang_s1,
                       S_ang_s2,
                       S_ang_s2,
                       S_ang_s2,
                       S_ang_s3,
                       S_ang_s3,
                       S_ang_s3,
                       S_ang_s4,
                       S_ang_s4,
                       S_ang_s4,
                       S_ang_s6,
                       S_ang_s6,
                       S_ang_s6,
                       S_ang_s9,
                       S_ang_s9,
                       S_ang_s9))

    np.savetxt('S_ang.dat', S_ang, fmt='%1.3e')
    '''
